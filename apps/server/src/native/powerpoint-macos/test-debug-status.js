const { getPowerPointStatus } = require('./index.js');

console.log('=== DIAGN√ìSTICO COMPLETO ===\n');

const test = () => {
    try {
        const result = getPowerPointStatus();
        
        console.log('üìä Status completo:');
        console.log(JSON.stringify(result, null, 2));
        console.log('\n');
        
        if (result.isAvailable && result.video) {
            console.log('üé¨ An√°lise do v√≠deo:');
            console.log(`   hasVideo: ${result.video.hasVideo}`);
            console.log(`   isPlaying: ${result.video.isPlaying}`);
            console.log(`   duration: ${result.video.duration}s`);
            console.log(`   currentTime: ${result.video.currentTime}s`);
            console.log(`   remainingTime: ${result.video.remainingTime}s`);
            console.log(`   isInSlideShow: ${result.isInSlideShow || false}`);
            console.log(`   currentSlide: ${result.currentSlide}`);
            
            console.log('\nüîç Diagn√≥stico:');
            if (result.video.hasVideo && result.video.isPlaying && result.video.currentTime === 0) {
                console.log('   ‚ö†Ô∏è  V√≠deo est√° tocando mas currentTime √© 0');
                console.log('   ‚Üí PowerPoint n√£o est√° expondo currentPosition');
                console.log('   ‚Üí Timer deveria iniciar para estimar o tempo');
            } else if (result.video.hasVideo && !result.video.isPlaying && result.video.duration > 0) {
                console.log('   ‚ÑπÔ∏è  V√≠deo detectado mas n√£o est√° tocando');
            } else if (result.video.hasVideo && result.video.isPlaying && result.video.currentTime > 0) {
                console.log('   ‚úÖ Tudo funcionando! PowerPoint est√° expondo currentTime');
            }
        }
    } catch (error) {
        console.error('‚ùå Erro:', error.message);
        console.error(error.stack);
    }
};

test();





